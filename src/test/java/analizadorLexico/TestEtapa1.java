package analizadorLexico;

import analizadorLexico.Escaner;
import analizadorLexico.LectorCF;
import analizadorLexico.Token;
import analizadorLexico.TokenType;

import org.junit.jupiter.api.Test;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

public class TestEtapa1 {
    Escaner escaner = new Escaner();
    LectorCF lector = new LectorCF();



    @Test
    public void testEscanerDesdeArchivo() throws IOException {

        List<TokenType> tiposEsperados = Arrays.asList(
                TokenType.CLASS,
                TokenType.IDCLASS,
                TokenType.LEFT_BRACE,
                TokenType.PUB,
                TokenType.INT,
                TokenType.IDOBJETS,
                TokenType.SEMICOLON,
                TokenType.PUB,
                TokenType.INT,
                TokenType.IDOBJETS,
                TokenType.COMMA,
                TokenType.IDOBJETS,
                TokenType.SEMICOLON,
                TokenType.RIGHT_BRACE,
                TokenType.IMPL,
                TokenType.IDCLASS,
                TokenType.LEFT_BRACE,
                TokenType.FN,
                TokenType.INT,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.INT,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.LEFT_BRACE,
                TokenType.IDOBJETS,
                TokenType.EQUAL,
                TokenType.INTEGER_LITERAL,
                TokenType.SEMICOLON,
                TokenType.IDOBJETS,
                TokenType.EQUAL,
                TokenType.INTEGER_LITERAL,
                TokenType.SEMICOLON,
                TokenType.IDOBJETS,
                TokenType.EQUAL,
                TokenType.INTEGER_LITERAL,
                TokenType.SEMICOLON,
                TokenType.WHILE,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.LESS_EQUAL,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.LEFT_BRACE,

                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.RIGHT_BRACE,
                TokenType.IDOBJETS,
                TokenType.IDOBJETS,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.EQUAL_EQUAL,
                TokenType.INTEGER_LITERAL,
                TokenType.RIGHT_PAREN,
                TokenType.LEFT_BRACE,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.IDOBJETS,
                TokenType.EQUAL,
                TokenType.IDOBJETS,
                TokenType.PLUS,
                TokenType.IDOBJETS,
                TokenType.SEMICOLON,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.RIGHT_BRACE,
                TokenType.IDOBJETS,
                TokenType.IDOBJETS,
                TokenType.LEFT_BRACE,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.IDOBJETS,
                TokenType.EQUAL,
                TokenType.IDOBJETS,
                TokenType.PLUS,
                TokenType.IDOBJETS,
                TokenType.SEMICOLON,
                TokenType.IDOBJETS,
                TokenType.EQUAL,
                TokenType.IDOBJETS,
                TokenType.SEMICOLON,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.RIGHT_BRACE,
                TokenType.LEFT_PAREN,
                TokenType.PLUS_PLUS,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.RIGHT_BRACE,
                TokenType.IDOBJETS,
                TokenType.SEMICOLON,
                TokenType.RIGHT_BRACE,
                TokenType.DOT,
                TokenType.LEFT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.LEFT_BRACE,
                TokenType.IDOBJETS,
                TokenType.EQUAL,
                TokenType.INTEGER_LITERAL,
                TokenType.SEMICOLON,
                TokenType.IDOBJETS,
                TokenType.EQUAL,
                TokenType.INTEGER_LITERAL,
                TokenType.SEMICOLON,
                TokenType.IDOBJETS,
                TokenType.EQUAL,
                TokenType.INTEGER_LITERAL,
                TokenType.SEMICOLON,
                TokenType.RIGHT_BRACE,
                TokenType.IDOBJETS,
                TokenType.INTEGER_LITERAL,
                TokenType.LEFT_PAREN,
                TokenType.IDCLASS,
                TokenType.RIGHT_PAREN,
                TokenType.LEFT_BRACE,
                TokenType.LEFT_PAREN,
                TokenType.IDCLASS,
                TokenType.DOT,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.STRING_LITERAL,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.LEFT_PAREN,
                TokenType.IDCLASS,
                TokenType.DOT,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.LEFT_PAREN,
                TokenType.IDCLASS,
                TokenType.DOT,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.STRING_LITERAL,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.RIGHT_BRACE,
                TokenType.IDOBJETS,
                TokenType.INTEGER_LITERAL,
                TokenType.LEFT_PAREN,
                TokenType.IDCLASS,
                TokenType.RIGHT_PAREN,
                TokenType.LEFT_BRACE,
                TokenType.LEFT_PAREN,
                TokenType.IDCLASS,
                TokenType.DOT,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.LEFT_PAREN,
                TokenType.IDCLASS,
                TokenType.DOT,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.STRING_LITERAL,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.RIGHT_BRACE,
                TokenType.RIGHT_BRACE,
                TokenType.IDOBJETS,
                TokenType.START,
                TokenType.LEFT_BRACE,
                TokenType.IDCLASS,
                TokenType.SEMICOLON,
                TokenType.IDCLASS,
                TokenType.SEMICOLON,
                TokenType.IDOBJETS,
                TokenType.EQUAL,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.IDOBJETS,
                TokenType.EQUAL,
                TokenType.IDCLASS,
                TokenType.DOT,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.LEFT_PAREN,
                TokenType.IDCLASS,
                TokenType.DOT,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.DOT,
                TokenType.IDOBJETS,
                TokenType.LEFT_PAREN,
                TokenType.IDOBJETS,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.RIGHT_PAREN,
                TokenType.SEMICOLON,
                TokenType.RIGHT_BRACE,
                TokenType.END
        );


        escaner.setEscaner(lector);
        lector.lectorArchivo("/home/nacho/IdeaProjects/tinyS/src/test/resources/testc.s");
        String source = lector.rechargeBuffer();
        escaner.setSource(source);

        List<Token> tokens = escaner.scanTokens();
        Escaner escaner = new Escaner(lector);

        for (int i = 0; i < tokens.size(); i++) {
            assertEquals(tiposEsperados.get(i), tokens.get(i).getType());
        }
    }
}

